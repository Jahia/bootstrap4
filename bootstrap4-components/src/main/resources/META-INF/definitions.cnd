<bootstrap4mix = 'http://www.jahia.org/bootstrap4/mix/1.0'>
<bootstrap4nt = 'http://www.jahia.org/bootstrap4/nt/1.0'>
<jnt = 'http://www.jahia.org/jahia/nt/1.0'>
<jmix = 'http://www.jahia.org/jahia/mix/1.0'>

[bootstrap4mix:predefinedGrid] > jmix:templateMixin mixin
 extends = bootstrap4nt:grid
 - grid (string, choicelist[resourceBundle,moduleImage='png']) = '4_8' autocreated < '2_10', '3_9', '4_8', '4_4_4', '3_6_3', '3_3_3_3', '6_6', '8_4', '9_3', '10_2', '12'

[bootstrap4mix:customGrid] > jmix:templateMixin mixin
 extends = bootstrap4nt:grid
 - gridClasses (string) = 'col col-md-8,col-6 col-md-4'

[bootstrap4mix:createSection] mixin
 extends = bootstrap4nt:grid
 itemtype = content
 - sectionElement (string, choicelist[resourceBundle]) = 'div' autocreated < 'section', 'article', 'header', 'footer', 'aside', 'nav', 'div'
 - sectionId (string) < '[a-zA-Z0-9-_]+'
 - sectionCssClass (string)
 - sectionRole (string)

[bootstrap4mix:createRow] mixin
 extends = bootstrap4nt:grid
 itemtype = content
 - rowId (string) < '[a-zA-Z0-9-_]+'
 - rowCssClass (string)
 - rowVerticalAlignment (string, choicelist[resourceBundle]) = 'default' autocreated < 'default', 'align-items-start', 'align-items-center', 'align-items-end'
 - rowHorizontalAlignment (string, choicelist[resourceBundle]) = 'default' autocreated < 'default', 'justify-content-start', 'justify-content-center', 'justify-content-end','justify-content-around','justify-content-between'

[bootstrap4mix:createContainer] mixin
 extends = bootstrap4nt:grid
 itemtype = content
 - containerId (string) < '[a-zA-Z0-9-_]+'
 - containerCssClass (string)
 - gridLayout (string, choicelist[resourceBundle]) = 'fixed-width' autocreated < 'fixed-width', 'full-width'

[bootstrap4mix:createAbsoluteAreas] mixin
 extends = bootstrap4nt:grid
 itemtype = content
 - level (string, choicelist[resourceBundle]) = '0' autocreated < '0', '1', '2', '3', '4', '5'


[bootstrap4nt:grid] > jnt:content, bootstrap4mix:component, jmix:list
 - gridType (string, choicelist[gridTypeInitializer,resourceBundle]) = 'predefinedGrid' autocreated < 'nogrid', 'predefinedGrid', 'customGrid'
 + * (jmix:droppableContent) = jmix:droppableContent

[bootstrap4mix:hasPadding] mixin
[bootstrap4mix:padding] mixin
 extends = bootstrap4mix:hasPadding
 itemtype = content
 - paddingWhere  (string, choicelist[resourceBundle]) = 'all' autocreated < 'all', 't', 'b', 'l', 'r', 'x', 'y'
 - paddingSize (string, choicelist[resourceBundle]) = '3' autocreated < '0', '1', '2', '3', '4', '5'

[bootstrap4mix:hasMargin] mixin
[bootstrap4mix:margin] mixin
 extends = bootstrap4mix:hasMargin
 itemtype = content
 - marginWhere  (string, choicelist[resourceBundle]) = 'all' autocreated < 'all', 't', 'b', 'l', 'r', 'x', 'y'
 - marginSize (string, choicelist[resourceBundle]) = '3' autocreated < '0', '1', '2', '3', '4', '5'

[bootstrap4mix:imageAdvancedSettings] mixin
 extends = bootstrap4mix:image
 itemtype = content
 - imageClass (string)
 - imageStyle (string)
 - imageID (string)

[bootstrap4mix:image] mixin
 - image (weakreference, picker[type='image']) < 'jmix:image'

[bootstrap4mix:mediaObjectImageAlignment] mixin
 extends = bootstrap4nt:mediaObject
 itemtype = content
 - imageVerticalAlignment (string, choicelist[resourceBundle]) = 'align-self-start' autocreated < 'align-self-start', 'align-self-center', 'align-self-end'
 - imageHorizonralAlignment (string, choicelist[resourceBundle]) = 'left' autocreated < 'left', 'right'

[bootstrap4mix:mediaObjectAdvancedSettings] mixin
 extends = bootstrap4nt:mediaObject
 itemtype = content
 - mediaObjectClass (string)
 - mediaObjectStyle (string)
 - mediaObjectID (string)

[bootstrap4nt:mediaObject] > jnt:content, bootstrap4mix:component, jmix:list, bootstrap4mix:image, bootstrap4mix:hasMargin
 + * (jmix:droppableContent) = jmix:droppableContent